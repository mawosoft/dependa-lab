name: CI/CD

on:
  workflow_dispatch:
    inputs:
      os:
        description: 'Matrix or single OS'
        type: choice
        default: 'windows-latest'
        options:
        - matrix
        - windows-latest
        - ubuntu-latest
        - macos-latest
      fail-fast:
        description: 'Fail fast'
        type: boolean
      skip-tests:
        description: 'Skip tests'
        type: boolean
  # push:
  #   branches: master
  # pull_request:
  #   branches: master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: pwsh

env:
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  Prepare:
    runs-on: ubuntu-latest
    steps:
    - name: Prepare Build matrix
      id: prep
      run: |
        $os = "[""windows-latest"", ""ubuntu-latest"", ""macos-latest""]"
        if ($${{ github.event.inputs.os != 'matrix' && github.event.inputs.os != '' }}) {
          $os = "[""${{ github.event.inputs.os }}""]"
        }
        echo "os=$os" >>$env:GITHUB_OUTPUT
    outputs:
      matrix_os: ${{ steps.prep.outputs.os }}

  Build:
    needs: Prepare
    outputs:
      deploy: ${{ steps.set_output.outputs.deploy }}
      release: ${{ steps.set_output.outputs.release }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ${{ fromJSON(needs.Prepare.outputs.matrix_os) }}
      fail-fast: ${{ github.event.inputs.fail-fast == 'true' }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: DotNet Version
      run: dotnet --version
    - name: Build
      env:
        MSBuildDebugEngine: 1 # Auto-creates binlogs in ./MSBuild_Logs
        # Fix incomplete binlogs in MSBuild <=17.3.x. See https://github.com/mawosoft/Mawosoft.Extensions.BenchmarkDotNet/issues/146
        MSBUILDLOGTASKINPUTS: 1
        MSBUILDTARGETOUTPUTLOGGING: true
        MSBUILDLOGIMPORTS: 1
        MSBUILDLOGALLENVIRONMENTVARIABLES: true
      run: |
        . ./build/startNativeExecution.ps1
        Set-Alias exec Start-NativeExecution
        exec { dotnet restore }
        # Parallel builds causing trouble here
        exec { dotnet build ./sample1/src/FooLib/FooLib.csproj -c Debug --no-restore }
        exec { dotnet build ./sample1/src/FooLib/FooLib.csproj -c Release --no-restore }
        exec { dotnet build ./sample1/ -c Debug --no-restore }
        exec { dotnet build ./sample1/ -c Release --no-restore }
        exec { dotnet pack ./sample1/src/FooLib/FooLib.csproj -c Release --no-build -o ./Packages }
        exec { dotnet pack ./sample1/src/BarApp/BarApp.csproj -c Release --no-build -o ./Packages }
    - name: Upload Binlogs
      if: ${{ always() }}
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}-Binlogs
        path: '**/MSBuild_Logs/*'
    - name: Upload Packages
      if: ${{ matrix.os == 'ubuntu-latest' || strategy.job-total == 1 }}
      uses: actions/upload-artifact@v3
      with:
        name: Packages
        path: ./Packages/
    - name: Test
      id: test
      if: ${{ github.event.inputs.skip-tests != 'true' }}
      run: |
        $tfms = @("net6.0")
        if ($IsWindows) { $tfms += "net48" }
        ./build/test.ps1 -p ./sample1/tests/FooLib.Tests/StableBDN/FooLib.Tests.StableBDN.csproj, ./sample1/tests/FooLib.Tests/NightlyBDN/FooLib.Tests.NightlyBDN.csproj, ./sample1/tests/BarApp.Tests/BarApp.Tests.csproj -c Debug, Release -f $tfms -v detailed -r ./TestResults -ff:$${{ strategy.fail-fast }}
    - name: Upload Test results
      if: ${{ always() && steps.test.outcome != 'skipped' }}
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}-Testresults
        path: ./TestResults/
